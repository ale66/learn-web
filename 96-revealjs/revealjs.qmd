---
title: "Learn Web"
author: "ale66"
format: 
  revealjs:
    footer: "[github.com/ale66/learn-web](https://github.com/ale66/learn-web)&nbsp;&nbsp;&nbsp;"
    theme: [moon]
    preview-links: auto
    chalkboard: 
      boardmarker-width: 2
    mermaid:
      theme: dark
      fontSize: 12
from: markdown+emoji
execute:
  echo: true
---

# Revealjs 

---

## Revealjs

A personal [GitHub project](https://github.com/hakimel/reveal.js/) on making presentations that are in fact HTML pages (with lots of JS inside)

goes above and beyond Powerpoint

The HTML page is self-contained and can be sent/loaded/published anywhere

In case, we can always edit the HTML page to tweak or add settings

Tutorial: [revealjs.com/](https://revealjs.com/)

Online editor: [slides.com/](https://slides.com/)


---

## Programme: 

* put down quick Markdown notes

* insert links and images

* create slides with `Pandoc --to revealjs`

* publish on accessible web page (e.g., W3schools spaces)

* go to the meeting (or exam) and present it

* let others catch up by reading on the web site

* see the demos: presentations can go *inside* web pages


---

##  Commands

Pandoc is __a professional tool__ and needs Powershell (Win) or Terminal (MacOs) to be launched

The following instructions for Win can be applied almost verbatim to MacOs

For step-by-step instructions open `exercise/README.md` in VS code and read it with the preview

---

## Commands: Win11

1. open the folder where the Markdown presentation file is, or where you want it to be.

2. right-click and start a `Terminal` or a `Powershell`

3. notice: you can also start a terminal/powershell from the 'Start' menu, but in such case you need the terminal to be 'pointed' to the working folder

If not we need to `cd` to the right directory, e.g.,

```bash
cd C:/Users/aless/git/96-revealjs
```

where the *path* is obviously personal


# From MD to Web presentation


---

## Run pandoc

open a terminal from inside your work folder 

if, e.g., `my_pres.md` is your presentation, give command

```bash
pandoc --standalone --from markdown --to revealjs my_pres.md -o my_pres.html
```

Pandoc reads `my_pres.md` and creates a *standalone* (no auxiliary files) HTML page: 

`my_pres.html` will contain [lots of] JS code that is *injected* to create navigation, focus, pens etc. 

open it with Firefox to run the presentation. 

use arrows to move, `o` for overview


---

## Themes and animations

```bash
pandoc --standalone --from markdown --to revealjs my_pre.md -o my_pres.html -V transition=convex -V theme=solarized --verbose
```

Check the available options on [slides.com](www.slides.com) 

#### with CSS

```bash
pandoc --standalone --from markdown --to revealjs my_pres.md -o my_pres.html 
--css my_revealjs_style.css -V transition=convex -V theme=solarized --verbose
```

Check out [transition effects](https://revealjs.com/transitions/)

Check out [themes](https://revealjs.com/themes/)

Test combinations to find one you like

This theme is `moon` with transition `none`

Try, e.g., `dracula` with `zoom`

---

## Exercise

For page numbers, open your HTML presentation and add, towards the bottom:

```js
Reveal.initialize({
	slideNumber: 'c/t'
	});
```

Save and reload in a browser: voil&agrave;!


---

## Post activities

1. study the produced HTML file: what does it link to? Can we edit it?

2. Visit the project [GitHub page](https://github.com/hakimel/reveal.js#markdown) for updates.

3. Look at image embeddings such as the Revealjs logo in this presentation

4. can you use pandoc to create a PDF of your presentation? 
(could you write your MA thesis in Markdown?)


# Extensions


---

## Quarto 

an extension of Markdown that supports publishing

`mypres.qmd` --> 

`mypres.html`, `mypres-revealjs.html`, `mypres.pdf` ...

it sets up Pandoc to produce more complex documents

all we've seen about Markdown to Revealjs is valid in Quarto

See the presentation of [Quarto-appearance](https://github.com/martinomagnifico/quarto-appearance)

