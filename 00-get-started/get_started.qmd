---
title: "Learn Web"
author: "ale66"
format: 
  revealjs:
    footer: "[github.com/ale66/learn-web](https://github.com/ale66/learn-web)&nbsp;&nbsp;&nbsp;"
    theme: [moon]
    preview-links: auto
    chalkboard: 
      boardmarker-width: 5
from: markdown+emoji
execute:
  echo: true
---


# Welcome

---

## Join online resources:

- __MS Teams__: there is a class team for instant sharing files and updates. It will also record classes.  

- __MyAriel__: a traditional educational web page with materials for download, links and quizzes.

- __Github__: a de facto standard repository for code and for collaboration. If time allows, a Github classroom will be created

---

## Code of conduct

- phones in the bag, off or on mute 

- laptops on, with Teams on and the rest off

- a loud environment: keep your voice low at all times

- VS Code for coding locally
  
- Firefox or Chromium (not Chrome) for testing.

---

## Timetable

- Friday 14:30 to 17:30: lectures + labs
  
- Saturday 8:30-ish to 11:30-ish: lectures, labs and workshop: work on your exam project.
  
---

## Learning objectives

* formal learning: coding authonomy with hypertext, markup, interpretation, boilerplates, web linking, containers etc.

* informal learning: plan, design and implement *a web communication project;* create a mock and present it to a technical/business committee

---

### Posponed gratification

* working in COM today often involves joining a web/multimedia team

* teams with *front-end* (UX) and *back-end* figures

* as with all technical communities, a jargon and unspoke assumptions

* technology is often unnecessarily obscure and

* continously changing  

---

##### Webcomm enables you to 

* navigate
    
    * a complex jargon
    
    * new languages, new development tools, new delivery mechanisms

* communicate with _techies_ effectively

* articulate what you want

* come up with your own concepts (mock-ups)

* if Web page design is your thing, a reasonable shot at getting *junior front-end developer* positions


# The exam

- detailed instructions on the MyAriel page

- exam dates are project submission dates
  
- [TBC] asynch assessment

---

## Let's look at past exam essays

Refactoring of existing web sites:

[Milan Dog shelter](https://canilimilano.w3spaces.com/)

[4T Mechanical toolmaker near Bologna](https://www.4tsrl.it/)


some projects may have been taken offline by their creators

[Refactoring the Web site of an indy comics store](https://replit.com/@vlborriello/MondiParalleliWebCommExam)

[Technical brief here](https://replit.com/@vlborriello/PresentationMondiParalleli)

[A newly-formed theatre company needs a Web site](https://replit.com/@ErikaBelvedere/Exam-Website-Erika-Belvedere#index.html)

[Technical brief here](https://replit.com/@ErikaBelvedere/Exam-Presentation-Erika-Belvedere)


[A personal portfolio](https://replit.com/@donnaashrafyous/Portfolio#index.html)


---

## Critical assessment

- to go from vision to industry we need concrete *sketches* or *artifacts*

- current pages are created only by the execution of complex Javascript (JS) codes: this is left for advanced training
  
- customer profiling/monitoring begins right at code level: let's see how

- implementation autonomy relieves us from dependence on social web platforms




# Online resources


---

## The self-study playground

[https://www.webdesignplayground.io/](https://www.webdesignplayground.io/)


---

## Githib and GH workspace: 

[www.github.com](https://www.github.com)

[A tutorial](https://github.blog/developer-skills/github/beginners-guide-to-github-repositories-how-to-create-your-first-repo/)


---

## W3schools: 

[www.w3schools.com/spaces/](https://www.w3schools.com/spaces/index.php)

---

## The Replit.com playground

[https://replit.com](https://replit.com)