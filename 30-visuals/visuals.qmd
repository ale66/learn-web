---
title: "Learn Web"
author: "ale66"
format: 
  revealjs:
    footer: "[github.com/ale66/learn-web](https://github.com/ale66/learn-web)&nbsp;&nbsp;&nbsp;"
    theme: [moon]
    preview-links: auto
    chalkboard: 
      boardmarker-width: 5
from: markdown+emoji
execute:
  echo: true
---

# Visuals


---

## The digital page, so far

- a HTML file on our computer
  
- beside, a CSS file with custom styles

- the page is *ditigal* but static, unconnected


---

## CSS styles

Even though style settings can go almost anywhere in HTML pages, we keep them *segregated* in CSS files.

This line must be inside the ``<head>`` section of your page:


```html
  <link href="mystyle.css" rel="stylesheet" type="text/css" />
```  

In this case ``mystyle.css`` must be in the same folder as the HTML file.


---

## Case: the CSS file is in a different folder 

In a sub-folder:

```html
  <link href="./css/mystyle.css" rel="stylesheet" type="text/css" />
```  

In the folder above:

```html
  <link href="../mystyle.css" rel="stylesheet" type="text/css" />
```  

in a parallel folder:

```html
  <link href="../css/general_site_style.css" rel="stylesheet" type="text/css" />
```  


---

## Case: there are several styles

```html
  <link href="../css/general_site_style.css" rel="stylesheet" type="text/css" />

  <link href="./css/specific_section_style.css" rel="stylesheet" type="text/css" />
```  

Overlapping, e.g., the same tag is styled twice, is an issue 


---

## Case: the style file is somewhere else in the file system

```html
<link href="c:/path/to/the/css/folder/style.css" rel="stylesheet" type="text/css" />
```  

---

## Case: the style file is online

We *borrow* the style from an online resource

```html
<link href="https://csszengarden.com/examples/style.css" rel="stylesheet" type="text/css" />
```

Get styles are on [GitHub](https://github.com/mezzoblue/csszengarden.com)


# Exercise


---

## Work with csszengarden styles

- visit [https://csszengarden.com/](https://csszengarden.com/)
  
- download the HTML and the CSS files and put them in a newly-created folder
  
- double-click the HTML file, check how it looks
  
- open VS Code then open the HTML file

- edit the HTML so that it includes the local CSS (the 'zen' look)

- now edit it again so that it includes the online CSS for the 'verde moderna' look


# Images

## Including images

![](./imgs/raymond-quenau-page.jpg)

Browsers pick up image files and incorporate them in the rendering of the page

The HTML code will link those image files in the same way as it links to the CSS file

The ``img`` tag has parameters that control the exact rendering of the image

```html
<img src="./imgs/quenau-page-1.jpg" alt="I show when the file fails to load" title="show when mouse over">
```


---

![](./imgs/6-img-2.png)


---

## Online image embedding

```html
<img src="https://upload.wikimedia.org/wikipedia/commons/thumb/0/04/Logo_Universit%C3%A0_degli_Studi_di_Milano.svg/1024px-Logo_Universit%C3%A0_degli_Studi_di_Milano.svg.png" alt="The unimi Minerva">
```

<img src="https://upload.wikimedia.org/wikipedia/commons/thumb/0/04/Logo_Universit%C3%A0_degli_Studi_di_Milano.svg/1024px-Logo_Universit%C3%A0_degli_Studi_di_Milano.svg.png" alt="The unimi Minerva">

Warning: we are *leasing* an area of the page to the source site


---

## a Brief on formats

- photo-oriented: they describe a *bitmap*: ``.bmp``, ``.jpg`` and ``.png``

- animation-oriented: ``.gif``
    
- rendering oriented, total control: they contain code that creates the image in the context: ``.svg``


---

## Figures

Different from simple embeddings, figures may have numbering, caption and be treated uniformly with the ``<figure></figure>`` tag

![](./imgs/6-traditional.png)


Details in Ch. 6 of the textbook


---

## Images as deco'

- an image can become the background of the page or portions thereof

- with *tiling* the same pattern/logo can be repeated throghout arbitrary surfaces
  
- details in Ch. 7 of the textbook

# Custom styles

## Motivations

CSS definitions can customise the standard HTML tags

However, there are few of those and CSS will change all its instances at once

Example

```css
p {
  align: right;
}
```

aligns the whole document to the right...


---

## Visual classes

Create ad hoc styles via new classes

Each class name needs be unique and begin by ``.``

```css
p {
  text-indent: 12pt;

  align: left;
}

.latinpara {
  text-indent: 4pt;

  align: right;
}
```


---

```html
<p>This is a presentation of an ancient text. Its author is Cicero.</p>

<p class="latinpara">Lorem ipsum ... </p>
```

---

## Draft new styles

Go to the Web Design Playground:

[https://webdesignplayground.io/lessons/7-4-0/](https://webdesignplayground.io/lessons/7-4-0/)


# The *hero image*

## An inviting visuals

Static pages now tend to start with a graphical upper part which is repeated for all pages: the *hero image*

For hero images, and only for them, it makes sense to have a specific form of title, which is attuned to the image itself, e.g., matches its second or third color, has specific font etc.

---

The CSS file can accomodate an hero image layout by 

- specific classes
  
- the ``background`` attribute to a class

---

#### Web-native illustration, 1

![](./imgs/6-hero.png)


---

#### Web-native illustration, 2

Can your replicate this type of page with this ``.jpg`` file? (click to enlarge)

![](./imgs/torrevelasca.jpg){width=5in}

---

![](./imgs/torrevelasca.jpg){.lightbox}


# Exercise

# Goal

Create a page about MA COM by 

- lifting text from the actual presentation page into a local HTML

- Have the Torre Velasca as hero image *or anything as you see fit*

- develop a CSS with special classes for title, claim and a bit else *over* the picture

- discuss the page with the colleague sitting on the left if it exists, or the one sittinng behind you


---

## instructions, I

- get the latest version of the class notes from GitHub: [github.com/ale66/learn-web/tree/main/30-visuals/exercise-rename-me](https://github.com/ale66/learn-web/tree/main/30-visuals/exercise-rename-me)

- go into folder ``30-visuals``, find the ``exercise-rename-me`` folder
  
- rename it

---

## instructions, II

- go inside, open the ``index.html`` file in Vs Code 

- also open the ``mystyle.css`` file in VS Code 
  
- look for info material about MA COM, e.g., on [www.unimi.it/en/education/master-programme/public-and-corporate-communication-com](https://www.unimi.it/en/education/master-programme/public-and-corporate-communication-com)

- develop a CSS class that includes the hero image and appropriate text font/color