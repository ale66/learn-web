---
title: "Learn Web"
author: "ale66"
format: 
  revealjs:
    footer: "[github.com/ale66/learn-web](https://github.com/ale66/learn-web)&nbsp;&nbsp;&nbsp;"
    theme: [moon]
    preview-links: auto
    chalkboard: 
      boardmarker-width: 5
from: markdown+emoji
execute:
  echo: true
---


# Web editing as typography

---

## Ch. 1 of the textbook

- creating pages in the way printshop create books

- can we take an arbitrary text and make it look good in print?
  
- boilerplates: a fixed typographic structure that is applied to provide conformity and readability

---

## Visual experience

Please look at Ch.1 of the textbook and the first set of exercises on [wdpg.io](https://wdpg.io)

- HTML contains both visible parts for the reader and invisible parts for the browser
- the [`<head>`]() part is all invisible but for the page title
- the [`<body>`]() part is mixed
- the CSS is good for assigning a style to each part of the text, title, subtitles, emphasised text etc.

---

## Early observations

- HTML is verbose: each page must declare its documentstyle, head, body etc.
  
- the discipline of nesting tags one into the other is __strict__

- similarly, [:](), [{}]() and [;]() *must be right* in CSS

- browsers may ignore some errors, but trouble looms

- at this stage, *pedantry beats creativity*

- copy+paste almost never works...

---

## try yourself

- Rename [change-me.html](./change-me.html) then open it with a browser

- Now open it with [VS Code], installed on your computer or online, or [Notepad]() or a similar editor

- try out some change to the text, save the file then *reload* on the browser

- with extensions that support *page preview*  VS Code can do it all...


---

## Technical points

- the interpretation approach

- the importance of browsers today

- the need for a formal language to describe a visual experience